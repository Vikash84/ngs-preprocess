/*
 * Configuration File to run NGS-PreProcess pipeline.
 */

/*
 * General Parameters
 */
    // Output folder name
params.outDir = 'output'
    // Number of threads to be used
params.threads = 2
    // Selects shortreads pipeline
params.run_shortreads_pipeline = true

/*
 * Short Reads Parameters
 */
    // Loading input reads
    // Remember to use wildcards in order to allow the pipeline to get reads ID.
    // Loading examples:
    // For Paired end reads: params.shortreads = 'SRR6307304_{1,2}.fastq' & params.reads.size = '2'
    // For Single end: params.shortreads = 'SRR7128258*' & params.reads.size = '1'
params.shortreads = ''
    // 1 for single end, 2 for paired ends. Let it blank if not needed.
params.reads_size = 2
    //
    // TrimGalore Parameters
    //
    // These are the parameters used to set the number of bases to clip from
    // 5' end and 3' end of paired end reads in TrimGalore. 0 < value < read length.
    // Optional. Quality default is 20 (phred)
    // Clip from 5' end
params.clip_r1 = 0
params.clip_r2 = 0
    // Clip from 3' end
params.three_prime_clip_r1 = 0
params.three_prime_clip_r2 = 0
    // This one might me left blank to use 20 as default or set a integer
params.quality_trim = 20
    //
    // Lighter error correction parameters
    // Set wheter to run or not lighter correction step.
params.lighter_execute = false
    //
    // Which k-mer to use. Check Ligther's manual (https://github.com/mourisl/Lighter)
params.lighter_kmer = 21
    // Bacterial Genome Size
params.lighter_genomeSize =
    // Lighter alpha paramter. Rule of thumb: (7/C) where C is coverage.
    // If left blank, Lighter will automatically calculate the best value.
params.lighter_alpha =
    //
    // FLASH - Software used to merge reads if wanted.
    //
    // Set to true or false if you want to execute its process.
params.flash_execute = false

/*
 * Configuring Nextflow Scopes.
 * Enable or not the production of Nextflow Reports
 */

//Trace Report
trace {
    enabled = false
    file = "${params.outDir}" + "/annotation_pipeline_trace.txt"
    fields = 'task_id,name,status,exit,realtime,cpus,%cpu,memory,%mem,rss'
}

//Timeline Report
timeline {
    enabled = false
    file = "${params.outDir}" + "/annotation_pipeline_timeline.html"
}

//Complete Report
report {
    enabled = false
    file = "${params.outDir}" + "/annotation_pipeline_nextflow_report.html"
}

// DO NOT CHANGE
//Queue limit
executor.$local.queueSize = 1
//Docker usage
docker.enabled = true
docker.runOptions = '-u $(id -u):root'
